name: Non-Prod AWS Deployment 

on:
  workflow_dispatch:
    inputs:
      Apply:
        description: 'Apply Terraform changes'
        required: true
        default: false
        type: boolean

permissions:
  id-token: write 
  contents: read 

defaults:
  run:
    working-directory: aws/non-prod-infra

jobs:
  plan:
    name: ${{ matrix.env }} Plan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  
      matrix:
        env: [pipeline, dev, staging]
        include:
          - env: pipeline
            display-name: Pipeline
          - env: dev
            display-name: Dev
          - env: staging
            display-name: Staging
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::975050265283:role/GHA-CodeBuild-Service-Role
          aws-region: eu-west-2
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.4
          
      - name: Install Checkov
        run: pip3 install checkov==3.2.365
        
      - name: Initialize Terraform
        run: ./run.sh ${{ matrix.env }} init
        
      - name: Run Terraform validation and checkov
        run: make check ${{ matrix.env }}
        
      - name: Run Terraform plan
        id: plan
        run: make plan ${{ matrix.env }}
        
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.env }}
          path: ${{ matrix.env }}/plan-${{ matrix.env }}.tfplan
          retention-days: 1
  
  apply:
    name: ${{ matrix.env }} Apply
    needs: plan
    if: ${{ github.event.inputs.Apply == 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ matrix.github-environment }}
    strategy:
      fail-fast: false  
      matrix:
        env: [pipeline, dev, staging]
        include:
          - env: pipeline
            display-name: Pipeline
            github-environment: Pipeline
          - env: dev
            display-name: Dev
            github-environment: Dev
          - env: staging
            display-name: Staging
            github-environment: Staging
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::975050265283:role/GHA-CodeBuild-Service-Role
          aws-region: eu-west-2
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.4
          
      - name: Initialize Terraform
        run: ./run.sh ${{ matrix.env }} init
        
      - name: Run Terraform plan
        run: make plan ${{ matrix.env }}
        
      - name: Run Terraform apply
        run: make apply ${{ matrix.env }}